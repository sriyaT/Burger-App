{"version":3,"sources":["components/Order/Order.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","order","id","Component","connect","state","auth","dispatch","actions","WithErrorHandler","axios"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,MAAQ,6D,iHCuCXC,EArCF,SAACC,GACV,IAAMC,EAAa,GAEnB,IAAI,IAAIC,KAAkBF,EAAMC,YAC5BA,EAAYE,KACR,CACIC,KAAKF,EACLG,OAAOL,EAAMC,YAAYC,KAKrC,IAAMI,EAAkBL,EAAYM,KAAI,SAAAC,GACpC,OAAO,0BACPC,MAAO,CACHC,cAAc,aACdC,QAAQ,eACRC,OAAO,QACPC,OAAO,iBACPC,QAAQ,OAEZC,IAAKP,EAAGJ,MAAOI,EAAGJ,KARX,KAQmBI,EAAGH,OARtB,QAYX,OACA,yBAAKW,UAAWC,IAAQlB,OAChB,2CAAiBO,GACjB,qCAAU,uCAAaY,OAAOC,WAAWnB,EAAMoB,OAAOC,QAAQ,O,wCCvBpEC,E,4LAGEC,KAAKvB,MAAMwB,cAAcD,KAAKvB,MAAMyB,MAAOF,KAAKvB,MAAM0B,U,+BAGtD,IAAIC,EAAQ,kBAACC,EAAA,EAAD,MASZ,OARIL,KAAKvB,MAAM6B,UACXF,EAASJ,KAAKvB,MAAM2B,OAAOpB,KAAI,SAAAuB,GAAK,OAC5B,kBAAC,EAAD,CACAf,IAAKe,EAAMC,GACX9B,YAAc6B,EAAM7B,YACpBmB,MAAOU,EAAMV,YAIvB,6BACKO,O,GAjBMK,aAqCNC,uBAdS,SAAAC,GACpB,MAAM,CACFP,OAAOO,EAAMJ,MAAMH,OACnBE,QAAQK,EAAMJ,MAAMD,QACpBJ,MAAMS,EAAMC,KAAKV,MACjBC,OAAOQ,EAAMC,KAAKT,WAGC,SAAAU,GACvB,MAAM,CACFZ,cAAe,SAACC,EAAOC,GAAR,OAAoBU,EAASC,IAAoBZ,EAAOC,QAIhEO,CAA4CK,YAAiBhB,EAAOiB","file":"static/js/5.dd96ee40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__c6ccf7ac94f331bb42a4f6643d218904-base64-5]\"};","import React from 'react';\nimport classes from \"./Order.css\"\n\nconst Order =(props) =>{\n    const ingredients =[];\n\n    for(let ingredientName in props.ingredients){\n        ingredients.push(\n            {\n                name:ingredientName,\n                amount:props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput= ingredients.map(ig =>{\n        return <span \n        style={{\n            textTransform:'capitalize',\n            display:'inline-block',\n            margin:'0 8px',\n            border:'1px solid #ccc',\n            padding:'5px'\n        }}\n        key={ig.name}>{ig.name} ({ig.amount})</span>;\n       \n    });\n\n    return(\n    <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n    </div>\n    );\n};\n    \n\n\n\n\nexport default Order;","import React, { Component } from 'react';\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport WithErrorHandler from \"../../hoc/WithErrorHandler/WithErrorHandler\"\nimport * as actions from \"../../Store/Actions/index\";\nimport { connect } from \"react-redux\";\n import Spinner from \"../../components/UI/Spinner/Spinner\";\n\nclass Orders extends Component{\n    \n    componentDidMount(){\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n    render(){\n        let orders =<Spinner />;\n        if(!this.props.loading){\n            orders = this.props.orders.map(order =>(\n                    <Order \n                    key={order.id}\n                    ingredients ={order.ingredients}\n                    price={order.price}/>\n                ))\n        };\n        return(\n          <div>\n              {orders}\n          </div>  \n        );\n    }\n\n}\nconst mapStateToProps = state =>{\n    return{\n        orders:state.order.orders,\n        loading:state.order.loading,\n        token:state.auth.token,\n        userId:state.auth.userId\n    }\n}\nconst mapDispatchToProps = dispatch =>{\n    return{\n        onFetchOrders: (token, userId) =>  dispatch(actions.fetchOrders(token, userId))\n    }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(WithErrorHandler(Orders,axios));"],"sourceRoot":""}